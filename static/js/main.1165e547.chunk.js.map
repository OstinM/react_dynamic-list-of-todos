{"version":3,"sources":["helpers.tsx","components/TodoList/TodoList.tsx","api.ts","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilteredBy","TodoList","props","todos","onSelect","selectedTodo","className","map","todo","id","completed","title","type","onClick","handleSelectTodo","classNames","filteredTodoList","filterBy","query","filteredTodos","filter","toLowerCase","includes","Active","Completed","All","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","TodoFilter","todosList","onFilter","useState","setQuery","React","filteredBy","setFilteredBy","useEffect","preparedTodoList","catch","error","Error","value","onChange","event","newFilteredBy","target","placeholder","Loader","TodoModal","handleCloseModal","user","setUser","loadUser","useCallback","userId","userFromServer","href","email","name","App","visibleTodos","setVisibleTodos","loading","setLoading","setSelectedTodo","finally","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1165e547.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\n\ntype FilterType = string;\n\nenum FilteredBy {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n\nexport function filteredTodoList(\n  todos: Todo[],\n  filterBy: FilterType,\n  query: string,\n) {\n  let filteredTodos = [...todos];\n\n  if (query) {\n    filteredTodos = filteredTodos.filter(\n      todo => todo.title.toLowerCase().includes(query.toLowerCase()),\n    );\n  }\n\n  switch (filterBy) {\n    case FilteredBy.Active:\n      return filteredTodos.filter(todo => !todo.completed);\n    case FilteredBy.Completed:\n      return filteredTodos.filter(todo => todo.completed);\n    case FilteredBy.All:\n    default:\n      return filteredTodos;\n  }\n}\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  onSelect: (todo: Todo) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = (props) => {\n  const { todos, onSelect, selectedTodo } = props;\n\n  const handleSelectTodo = (todo: Todo) => {\n    onSelect(todo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            {!todo.completed\n              ? (\n                <>\n                  <td className=\"is-vcentered\" />\n                  <td className=\"is-vcentered is-expanded\">\n                    <p className=\"has-text-danger\">{todo.title}</p>\n                  </td>\n                </>\n              ) : (\n                <>\n                  <td className=\"is-vcentered\">\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  </td>\n                  <td className=\"is-vcentered is-expanded\">\n                    <p className=\"has-text-success\">\n                      {todo.title}\n                    </p>\n                  </td>\n                </>\n              )}\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleSelectTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far',\n                    { 'fa-eye-slash': selectedTodo === todo },\n                    { 'fa-eye': selectedTodo !== todo })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\n\nimport './TodoFilter.scss';\nimport { filteredTodoList } from '../../helpers';\nimport { Todo } from '../../types/Todo';\nimport { getTodos } from '../../api';\n\ntype Props = {\n  todosList: Todo[],\n  onFilter: (todos: Todo[]) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = (props) => {\n  const { todosList, onFilter } = props;\n  const [query, setQuery] = useState('');\n\n  const [filteredBy, setFilteredBy] = React.useState('all');\n\n  const handleFilterChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const newFilteredBy = event.target.value;\n\n    setFilteredBy(newFilteredBy);\n\n    const preparedTodoList = filteredTodoList(todosList, newFilteredBy, query);\n\n    onFilter(preparedTodoList);\n  };\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const resetQueryForm = () => {\n    setQuery('');\n  };\n\n  useEffect(() => {\n    getTodos()\n      .then(todos => {\n        const preparedTodoList = filteredTodoList(todos, filteredBy, query);\n\n        onFilter(preparedTodoList);\n      })\n      .catch(error => {\n        throw new Error('error', error);\n      });\n  }, [filteredBy, onFilter, query]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filteredBy}\n            onChange={handleFilterChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right reset__icon\">\n          {query && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={resetQueryForm}\n              aria-labelledby=\"button-label\"\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo;\n  handleCloseModal: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  handleCloseModal,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const loadUser = useCallback(() => {\n    getUser(selectedTodo.userId)\n      .then(userFromServer => {\n        setUser(userFromServer);\n      })\n      .catch(error => {\n        throw new Error(error);\n      });\n  }, []);\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleCloseModal}\n              aria-labelledby=\"button-label\"\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {!selectedTodo.completed\n                ? (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                ) : (\n                  <strong className=\"has-text-success\">Done</strong>\n                )}\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n\n  const [loading, setLoading] = useState(true);\n\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const handleCloseModal = () => {\n    setSelectedTodo(null);\n  };\n\n  useEffect(() => {\n    getTodos()\n      .then(todos => {\n        setVisibleTodos(todos);\n      })\n      .catch(error => {\n        throw new Error('Error fetching todos', error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todosList={visibleTodos}\n                onFilter={setVisibleTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {\n                loading\n                  ? (\n                    <Loader />\n                  )\n                  : (\n                    <TodoList\n                      todos={visibleTodos}\n                      onSelect={setSelectedTodo}\n                      selectedTodo={selectedTodo}\n                    />\n                  )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo\n        && (\n          <TodoModal\n            selectedTodo={selectedTodo}\n            handleCloseModal={handleCloseModal}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}